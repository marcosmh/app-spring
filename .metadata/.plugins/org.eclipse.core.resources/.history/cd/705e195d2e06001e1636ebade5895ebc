package com.std.springapp.repository;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.std.springapp.domain.Product;

@Repository(value = "productDao")
public class JPAProductDao implements ProductDao {
	
	private EntityManager em = null;
	
	@PersistenceContext
    public void setEntityManager(EntityManager em) {
        this.em = em;
    }

	@Override
	@Transactional(readOnly = true)
	@SuppressWarnings("unchecked")	
	public List<Product> getProductList() {
		
				
		//return em.createQuery("select p from Product p order by p.id",Product.class).getResultList();			
		//return em.createNativeQuery("select p.* from products p order by p.id",Product.class).getResultList();
		
		Product product = new Product();
		List<Product> list = new ArrayList<Product>();
		try {
		Query query = em.createNativeQuery("select p.* from products p order by p.id",Product.class);
		List<Object[]> results = query.getResultList();
		
		for (Object[] r :  results) {
			product.setId( (int) r[0]);
			product.setDescription( (String) r[1] );
			product.setPrice( (double) r[2] );
			list.add(product);			
		}
		
		catch(Exception e) {
			
		}
		return list;
	}

	@Override
	@Transactional(readOnly = false)
	public void saveProduct(Product prod) {
		em.merge(prod);
		
	}

}
